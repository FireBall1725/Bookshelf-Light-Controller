name: Build Firmware

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio
    
    - name: Build firmware
      run: |
        echo "Building firmware for ESP32-C3-DevKitC-02..."
        pio run -e esp32-c3-devkitc-02
    
    - name: Run tests
      run: |
        echo "Running unit tests..."
        pio test -e native
    
    - name: Create versioned firmware
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Creating versioned firmware..."
        
        # Get git hash
        GIT_HASH=$(git rev-parse --short HEAD)
        echo "Git hash: $GIT_HASH"
        
        # Copy and rename firmware
        if [ -f ".pio/build/esp32-c3-devkitc-02/firmware.bin" ]; then
          cp ".pio/build/esp32-c3-devkitc-02/firmware.bin" "firmware-v1.0.0-${GIT_HASH}.bin"
          echo "Created firmware-v1.0.0-${GIT_HASH}.bin"
        else
          echo "Firmware binary not found!"
          exit 1
        fi
    
    - name: Upload firmware artifacts
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: firmware-${{ github.sha }}
        path: firmware-v1.0.0-*.bin
        retention-days: 30
    
    - name: Create GitHub Release
      if: github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        files: firmware-v1.0.0-*.bin
        tag_name: v${{ github.sha }}
        name: Firmware Build ${{ github.sha }}
        body: |
          ## Firmware Release
          
          **Build Info:**
          - Git Hash: ${{ github.sha }}
          - Build Date: ${{ github.event.head_commit.timestamp }}
          - Commit Message: ${{ github.event.head_commit.message }}
          
          **Features:**
          - WiFi connectivity with WiFiManager
          - Web-based configuration interface
          - I2C communication for LED control
          - SPIFFS file system for data storage
          - Home Assistant MQTT integration
          - Firmware update capability
          - RGB+CCT LED control
          - Configuration management
          
          **Installation:**
          1. Download the firmware binary
          2. Use ESP32 flash tool to upload
          3. Configure WiFi and settings via web interface
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
